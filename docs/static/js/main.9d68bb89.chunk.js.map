{"version":3,"sources":["components/QR.tsx","components/TransitionDown.tsx","components/Snack.tsx","components/SideBar.tsx","components/TitleBar.tsx","lib/reducer.ts","lib/initialState.ts","components/App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","backdrop","zIndex","drawer","color","backgroundColor","QR","classes","useContext","AppContext","state","dispatch","Backdrop","className","data-e2e","open","qrOpen","onClick","type","value","TransitionDown","props","Slide","direction","Snack","handleClose","_e","reason","Snackbar","snackOpen","TransitionComponent","autoHideDuration","onClose","SnackbarContent","message","action","Button","size","width","flexShrink","drawerPaper","drawerContent","drawerHeader","height","display","flexDirection","justifyContent","alignItems","padding","fontFamily","version","marginTop","spacing","SideBar","Drawer","variant","paper","drawerOpen","role","Avatar","alt","src","Typography","pjson","List","ListItem","button","ListItemIcon","style","blue","ListItemText","secondary","window","common","black","Divider","toolbar","iconButton","marginRight","title","flexGrow","TitleBar","AppBar","position","Toolbar","IconButton","edge","aria-label","reducer","month","year","initialState","createMuiTheme","overrides","MuiCssBaseline","html","margin","userSelect","WebkitUserSelect","WebkitTouchCallout","WebkitTapHighlightColor","body","offset","mixins","root","overflow","icon","content","textAlign","top","left","transform","card","maxWidth","label","fontWeight","letterSpacing","form","minWidth","select","answer","age","fontSize","eto","createContext","App","y","useReducer","Years","start","end","items","i","gengo","wareki","dataE2E","push","MenuItem","Wareki","Date","getFullYear","Months","Tsuki","useEffect","localforage","getItem","then","arg","catch","err","console","error","setItem","Provider","ThemeProvider","CssBaseline","Card","CardContent","FormControl","Select","onChange","e","Number","target","m","birthday","today","getMonth","Math","floor","calc","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.9d68bb89.chunk.js","sourcesContent":["import React, { useContext } from 'react';\nimport Backdrop from '@material-ui/core/Backdrop';\n\nimport { QRCode } from 'react-qrcode-logo';\n\nimport createStyles from '@material-ui/core/styles/createStyles';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { AppContext } from './App';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#fff',\n      backgroundColor: 'rgba(0, 0, 0, 0.8)',\n    },\n  })\n);\n\nexport const QR: React.FC = () => {\n  const classes = useStyles();\n  const { state, dispatch } = useContext(AppContext);\n\n  return (\n    <div>\n      <Backdrop\n        className={classes.backdrop}\n        data-e2e=\"backdrop\"\n        open={state.qrOpen}\n        onClick={() => dispatch({ type: 'qr', value: false })}\n      >\n        <QRCode value=\"https://sprout2000.github.io/nenrei\" />\n      </Backdrop>\n    </div>\n  );\n};\n","import React from 'react';\nimport Slide, { SlideProps } from '@material-ui/core/Slide';\n\n/**\n * Omit\n * type Omit<T, K extends keyof any>\n * 型 T の中から、キー名が K に当てはまるプロパティを除外した新しい型を返す\n */\ntype TransitionProps = Omit<SlideProps, 'direction'>;\n\nexport const TransitionDown: React.FC<TransitionProps> = (props) => (\n  <Slide {...props} direction=\"down\" />\n);\n","import React, { useContext } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Snackbar, { SnackbarCloseReason } from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nimport { TransitionDown } from './TransitionDown';\nimport { AppContext } from './App';\n\nexport const Snack: React.FC = () => {\n  const { state, dispatch } = useContext(AppContext);\n\n  const handleClose = (\n    _e?: React.SyntheticEvent,\n    reason?: SnackbarCloseReason\n  ) => {\n    if (reason === 'clickaway') return;\n    dispatch({ type: 'snack', value: false });\n  };\n  return (\n    <Snackbar\n      open={state.snackOpen}\n      TransitionComponent={TransitionDown}\n      autoHideDuration={2500}\n      onClose={handleClose}>\n      <SnackbarContent\n        message=\"© 2019-2021 sprout2000.\"\n        action={\n          <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\n            OK\n          </Button>\n        }\n      />\n    </Snackbar>\n  );\n};\n","import React, { useContext } from 'react';\n\n/** Styles */\nimport createStyles from '@material-ui/core/styles/createStyles';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\n/** Common components */\nimport Typography from '@material-ui/core/Typography';\n\n/** Drawer and List */\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport Avatar from '@material-ui/core/Avatar';\n\n/** Icons */\nimport ShareIcon from '@material-ui/icons/Share';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport CopyrightOutlinedIcon from '@material-ui/icons/CopyrightOutlined';\n\n/** Colors */\nimport { blue, common } from '@material-ui/core/colors';\n\n/** Resources */\nimport pjson from '../../package.json';\n\n/** Context */\nimport { AppContext } from './App';\n\nconst drawerWidth = 250;\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerContent: {\n      width: drawerWidth,\n    },\n    drawerHeader: {\n      height: 150,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: '1em',\n      backgroundColor: '#ff375f',\n      color: '#ffffff',\n      fontFamily: '-apple-system, BlinkMacSystemFont, Roboto, sans-serif',\n    },\n    version: {\n      marginTop: theme.spacing(2),\n    },\n  })\n);\n\nexport const SideBar: React.FC = () => {\n  const { state, dispatch } = useContext(AppContext);\n  const classes = useStyles();\n\n  const handleURL = () => {\n    window.open('https://github.com/sprout2000/nenrei', '_blank');\n  };\n\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant=\"temporary\"\n      classes={{ paper: classes.drawerPaper }}\n      open={state.drawerOpen}\n      onClose={() => dispatch({ type: 'drawer', value: !state.drawerOpen })}>\n      <div\n        className={classes.drawerContent}\n        role=\"presentation\"\n        onClick={() => dispatch({ type: 'drawer', value: !state.drawerOpen })}>\n        <div className={classes.drawerHeader}>\n          <Avatar alt=\"Logo\" src=\"./icon-288.png\" />\n          <Typography className={classes.version}>\n            年齢計算 v<span data-e2e=\"version\">{pjson.version}</span>\n          </Typography>\n        </div>\n        <List>\n          <ListItem\n            data-e2e=\"share\"\n            button\n            onClick={() => dispatch({ type: 'qr', value: true })}>\n            <ListItemIcon>\n              <ShareIcon style={{ color: blue[500] }} />\n            </ListItemIcon>\n            <ListItemText secondary=\"このアプリを共有\" />\n          </ListItem>\n          <ListItem button onClick={handleURL}>\n            <ListItemIcon>\n              <GitHubIcon style={{ color: common.black }} />\n            </ListItemIcon>\n            <ListItemText secondary=\"レポジトリ\" />\n          </ListItem>\n          <Divider />\n          <ListItem\n            button\n            onClick={() => dispatch({ type: 'snack', value: true })}>\n            <ListItemIcon>\n              <CopyrightOutlinedIcon color=\"secondary\" />\n            </ListItemIcon>\n            <ListItemText secondary=\"ライセンスの表示\" />\n          </ListItem>\n        </List>\n      </div>\n    </Drawer>\n  );\n};\n","import React, { useContext } from 'react';\n\n/** Styles */\nimport createStyles from '@material-ui/core/styles/createStyles';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\n/** Common */\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\n\n/** AppBar */\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\n/** Icons */\nimport MenuIcon from '@material-ui/icons/Menu';\n\n/** Context */\nimport { AppContext } from './App';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    toolbar: {\n      backgroundColor: '#ff375f',\n    },\n    iconButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  })\n);\n\nexport const TitleBar: React.FC = () => {\n  const { state, dispatch } = useContext(AppContext);\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"fixed\">\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          onClick={() => dispatch({ type: 'drawer', value: !state.drawerOpen })}\n          edge=\"start\"\n          data-e2e=\"menu\"\n          className={classes.iconButton}\n          color=\"inherit\"\n          aria-label=\"menu\">\n          <MenuIcon />\n        </IconButton>\n        <Typography className={classes.title}>年齢計算</Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n","import { State } from './State';\nimport { Action } from './Action';\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case 'month':\n      return { ...state, month: action.value };\n    case 'year':\n      return { ...state, year: action.value };\n    case 'drawer':\n      return { ...state, drawerOpen: action.value };\n    case 'qr':\n      return { ...state, qrOpen: action.value };\n    case 'snack':\n      return { ...state, snackOpen: action.value };\n    default:\n      return state;\n  }\n};\n","import { State } from './State';\n\nexport const initialState: State = {\n  year: 1989,\n  month: 4,\n  drawerOpen: false,\n  qrOpen: false,\n  snackOpen: false,\n};\n","import React, { useEffect, useReducer, createContext } from 'react';\nimport localforage from 'localforage';\n\nimport {\n  createStyles,\n  makeStyles,\n  ThemeProvider,\n  createMuiTheme,\n} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport { QR } from './QR';\nimport { Snack } from './Snack';\nimport { SideBar } from './SideBar';\nimport { TitleBar } from './TitleBar';\n\nimport { State } from '../lib/State';\nimport { Action } from '../lib/Action';\nimport { reducer } from '../lib/reducer';\nimport { initialState } from '../lib/initialState';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst typeguardStorage = (arg: any): arg is Storage => {\n  return (\n    arg !== null &&\n    typeof arg === 'object' &&\n    typeof arg.year === 'number' &&\n    typeof arg.month === 'number'\n  );\n};\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiCssBaseline: {\n      '@global': {\n        html: {\n          margin: 0,\n          padding: 0,\n          userSelect: 'none',\n          WebkitUserSelect: 'none',\n          WebkitTouchCallout: 'none',\n          WebkitTapHighlightColor: 'transparent !important',\n          height: '100%',\n        },\n        body: {\n          height: '100%',\n        },\n        '#root': {\n          height: '100%',\n        },\n      },\n    },\n  },\n});\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    offset: theme.mixins.toolbar,\n    root: {\n      margin: 0,\n      padding: 0,\n      fontFamily: '-apple-system, BlinkMacSystemFont, Roboto, sans-serif',\n      height: '100%',\n      backgroundColor: '#efeff4',\n      position: 'relative',\n      overflow: 'hidden',\n    },\n    icon: {\n      margin: '0 auto',\n      padding: 0,\n    },\n    content: {\n      textAlign: 'center',\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n    },\n    card: {\n      margin: '1em auto',\n      width: '80vw',\n      maxWidth: 400,\n      color: '#666',\n    },\n    label: {\n      fontWeight: 'bold',\n      color: 'rgb(0, 122, 255)',\n      letterSpacing: '0.25em',\n      userSelect: 'none',\n    },\n    form: {\n      minWidth: 250,\n      padding: 10,\n    },\n    select: {\n      minWidth: 200,\n    },\n    answer: {\n      fontWeight: 'bold',\n      color: 'rgb(255, 45, 85)',\n      letterSpacing: '0.25em',\n    },\n    age: {\n      fontSize: '6em',\n      color: '#1f1f21',\n    },\n    eto: {\n      userSelect: 'text',\n    },\n  })\n);\n\nexport const AppContext = createContext(\n  {} as {\n    state: State;\n    dispatch: React.Dispatch<Action>;\n  }\n);\n\nexport const App: React.FC = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const classes = useStyles();\n\n  const Wareki = (start: number, end: number): JSX.Element[] => {\n    const items = [];\n\n    for (let i = start; i <= end; i++) {\n      let gengo = '';\n      let offset = 0;\n\n      if (i < 1926) {\n        gengo = '大正';\n        offset = 1911;\n      } else if (i < 1989) {\n        gengo = '昭和';\n        offset = 1925;\n      } else if (i < 2019) {\n        gengo = '平成';\n        offset = 1988;\n      } else {\n        gengo = '令和';\n        offset = 2018;\n      }\n      const wareki = i - offset;\n\n      const dataE2E = i === 1971 ? 'year' : '';\n\n      items.push(\n        <MenuItem key={i} value={i} data-e2e={dataE2E}>\n          <Typography>\n            {gengo}\n            {wareki === 1 ? '元' : wareki}年 ({i})\n          </Typography>\n        </MenuItem>\n      );\n    }\n\n    return items;\n  };\n\n  const Tsuki = (): JSX.Element[] => {\n    const items = [];\n\n    for (let i = 1; i <= 12; i++) {\n      const dataE2E = i === 1 ? 'month' : '';\n      items.push(\n        <MenuItem key={i} value={i} data-e2e={dataE2E}>\n          <Typography>{i}月</Typography>\n        </MenuItem>\n      );\n    }\n\n    return items;\n  };\n\n  const Years = Wareki(\n    new Date().getFullYear() - 100,\n    new Date().getFullYear()\n  );\n  const Months = Tsuki();\n\n  const calc = (y: number, m: number): number => {\n    const birthday = y * 10000 + m * 100 + 1;\n    const today = new Date();\n    const target =\n      today.getFullYear() * 10000 + (today.getMonth() + 1) * 100 + 1;\n\n    return Math.floor((target - birthday) / 10000);\n  };\n\n  const eto = (y: number): string => {\n    const es = ['庚', '辛', '壬', '癸', '甲', '乙', '丙', '丁', '戊', '己'];\n    const tos = [\n      '申（さる）',\n      '酉（とり）',\n      '戌（いぬ）',\n      '亥（いのしし）',\n      '子（ねずみ）',\n      '丑（うし）',\n      '寅（とら）',\n      '卯（うさぎ）',\n      '辰（たつ）',\n      '巳（へび）',\n      '午（うま）',\n      '未（ひつじ）',\n    ];\n\n    return `${es[y % 10]}${tos[y % 12]}`;\n  };\n\n  useEffect(() => {\n    localforage\n      .getItem('nenrei-20210401')\n      .then((value) => {\n        if (!value || !typeguardStorage(value)) {\n          dispatch({ type: 'year', value: 1989 });\n          dispatch({ type: 'month', value: 4 });\n        } else {\n          dispatch({ type: 'year', value: value.year });\n          dispatch({ type: 'month', value: value.month });\n        }\n      })\n      .catch((err) => console.error(err));\n  }, []);\n\n  useEffect(() => {\n    localforage\n      .setItem('nenrei-20210401', { year: state.year, month: state.month })\n      .catch((err) => console.error(err));\n  }, [state.month, state.year]);\n\n  return (\n    <AppContext.Provider value={{ state, dispatch }}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <div className={classes.root}>\n          <CssBaseline />\n          <QR />\n          <TitleBar />\n          <SideBar />\n          <div className={classes.content}>\n            <div className={classes.offset} />\n            <div className={classes.icon}>\n              <img src=\"./icon-288.png\" width={96} height={96} alt=\"年齢計算\" />\n            </div>\n            <Snack />\n            <Card className={classes.card}>\n              <CardContent>\n                <Typography className={classes.label}>生まれ年と月</Typography>\n                <div>\n                  <FormControl variant=\"outlined\" className={classes.form}>\n                    <Select\n                      data-e2e=\"year-selector\"\n                      className={classes.select}\n                      value={state.year}\n                      onChange={(e) => {\n                        dispatch({\n                          type: 'year',\n                          value: Number(e.target.value),\n                        });\n                      }}>\n                      {Years}\n                    </Select>\n                  </FormControl>\n                </div>\n                <div>\n                  <FormControl variant=\"outlined\" className={classes.form}>\n                    <Select\n                      data-e2e=\"month-selector\"\n                      className={classes.select}\n                      value={state.month}\n                      onChange={(e) => {\n                        dispatch({\n                          type: 'month',\n                          value: Number(e.target.value),\n                        });\n                      }}>\n                      {Months}\n                    </Select>\n                  </FormControl>\n                </div>\n              </CardContent>\n            </Card>\n            <Card className={classes.card}>\n              <CardContent>\n                <Typography className={classes.answer}>年齢</Typography>\n                <Typography>\n                  満\n                  <span className={classes.age}>\n                    <span data-e2e=\"age\">{calc(state.year, state.month)}</span>\n                  </span>\n                  歳\n                </Typography>\n                <Typography>\n                  <span className={classes.eto}>\n                    <span data-e2e=\"eto\">{eto(state.year)}</span>\n                  </span>\n                </Typography>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </ThemeProvider>\n    </AppContext.Provider>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister(): void {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './components/App';\n\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}